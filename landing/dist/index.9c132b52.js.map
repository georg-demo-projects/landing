{"mappings":"AAQA,SAASA,EAASC,GACdA,EAAMC,iBACSC,SAASC,iBAAiB,gBAClCC,SAAQC,GAASA,EAAMC,UAAW,ICD9B,SAAAC,GAVfC,OAUkCA,EAVlCC,KAU0CA,EAV1CC,SAUgDA,EAAQC,aAAEA,EAAe,WAErE,IAAIC,EAAQC,YAAYC,MAExBC,uBAAsB,SAASR,EAAQS,GAErB,IAAVC,GAAgBD,EAAOJ,GAASF,EAEhCO,EAAe,EAAGA,EAAe,EAC5BA,EAAe,IAAGA,EAAe,GAGP,IAA/BC,EAAWV,EAAOS,GAGtBR,EAAKS,GAEDD,EAAe,GACfF,sBAAsBR,GAGL,IAAjBU,GACAN,OC3BG,SAAAQ,IAEX,MAAMC,EAAalB,SAASmB,cAAc,YAOzB,IAAIC,sBAAqB,CAACC,EAASC,KAChDD,EAAQnB,SAAQqB,IAERA,EAAMC,kBAUtB,WACI,KA4EOC,KArGmB,KA0BtB,OAGJ,MAAMC,EAAS1B,SAASmB,cAAc,mBAChCQ,EAAO3B,SAASmB,cAAc,iBAE9BS,EAwCV,SAA2BF,GAEvB,MAAMG,EAAe,GACfC,EAAyBC,KAAKC,IAAIP,IA5ErB,MA4EiD,EAC9DQ,EAAoB,IAE1B,OAAQjB,IAEJ,MAAMkB,EAASL,GAAgB,EAAIb,GAC7BmB,EAAQ,GAAK,EAAIF,GAAqBjB,EACtCoB,IAA0B,EAAID,GAAS,EAAI,IAC3CE,EAAuBP,EAAyBd,EAEtDU,EAAOY,MAAMC,UACT,aAAaH,8BAKjBD,MAAiBA,0BACjBD,iCACHG,QA7DoBG,CAAkBd,GACjCe,EA6BV,SAAyBd,GACrB,MAAMe,EAAuBX,KAAKC,IAAIP,IAhEnB,MAgE+C,EAElE,OAAQT,IACJ,MAAM2B,EAAaD,EAAuB1B,EAC1CW,EAAKW,MAAMC,UAAY,cAAcI,OACrChB,EAAKW,MAAMM,QAAU,EAAI5B,GAnCV6B,CAAgBlB,GAEnCtB,EAAQ,CACJG,SAAU,KACVF,OAAQ,SAAUS,GACd,OAAOA,GAEXR,KAAOS,IACHY,EAAaZ,GACbyB,EAAWzB,IAEfP,aAAc,MAOtB,SAA8BiB,GAC1BA,EAAOoB,UAAUC,IAAI,4BACrBrB,EAAOY,MAAMC,UAAY,GARjBS,CAAqBtB,GAWjC,SAA4BC,GACxBA,EAAKmB,UAAUC,IAAI,0BACnBpB,EAAKW,MAAMC,UAAY,GACvBZ,EAAKW,MAAMM,QAAU,GAbbK,CAAmBtB,MA/BfuB,GACA5B,EAAS6B,UAAUjC,SAVf,CAEkBkC,UAAnB,KAaNC,QAAQnC,GAmFrB,SAASO,IACL,OAAOM,KAAKuB,IAAItD,SAASuD,gBAAgBC,aAAY,EAAKC,OAAQC,YAAY,GC1GnE,SAAAC,IAEX,MAAMC,EAAQ5D,SAASmB,cAAc,UACvBnB,SAASmB,cAAc,iBAE/B0C,iBAAiB,SAIvB,SAA2BC,GAoBvBzD,EAAQ,CACJG,SAAU,IACVF,OAAQ,SAAUS,GACd,OAAOA,GAEXR,KAAOS,IACH,IAAI+C,EAAI,IAAM/C,EACd4C,EAAMtB,MAAMC,UAAY,cAAcwB,OAE1CtD,aAAc,KACVmD,EAAMtB,MAAM0B,QAAU,aAzB9B3D,EAAQ,CACJG,SAAU,IACVF,OAAQ,SAAUS,GACd,OAAOA,GAEXR,KAAOS,IACH,IAAI+C,EAAI,KAAO,EAAI/C,GACnB4C,EAAMtB,MAAMC,UAAY,cAAcwB,OAE1CtD,aAAc,SCnB1BgD,OAAOQ,OAAS,KACZhD,IJHkBjB,SAASmB,cAAc,sBAC/B0C,iBAAiB,QAAShE,GIIpC8D","sources":["src/components/get-in-touch/get-in-touch.js","src/utilities/animate.js","src/components/mission/mission.js","src/components/cookie-popup/cookie-popup.js","src/index.js"],"sourcesContent":["\r\nexport default function getInTouch() {\r\n    // типа включил валидацию формы (проверка required)\r\n\r\n    const submitBtn = document.querySelector('.send__form-submit');\r\n    submitBtn.addEventListener('click', onSubmit);\r\n}\r\n\r\nfunction onSubmit(event) {\r\n    event.preventDefault();\r\n    const inputs = document.querySelectorAll('.send__input');\r\n    inputs.forEach(input => input.required = true);\r\n\r\n    // ...\r\n}\r\n","// Функция создания анимации\r\n//\r\n// timing(timeFraction)\r\n//      Функция расчёта времени (прогресса анимации) (от 0 до 1)\r\n//\r\n// draw(progress)\r\n//      Функция отрисовки. progress от 0 до 1\r\n//\r\n// duration\r\n//      Продолжительность анимации\r\nexport default function animate({ timing, draw, duration, animationEnd = () => { } }) {\r\n\r\n    let start = performance.now();\r\n\r\n    requestAnimationFrame(function animate(time) {\r\n        // timeFraction изменяется от 0 до 1\r\n        let timeFraction = (time - start) / duration;\r\n\r\n        if (timeFraction < 0) timeFraction = 0;\r\n        else if (timeFraction > 1) timeFraction = 1;\r\n\r\n        // вычисление текущего прогресса анимации\r\n        let progress = timing(timeFraction);\r\n\r\n        // отрисовать анимацию\r\n        draw(progress);\r\n\r\n        if (timeFraction < 1) {\r\n            requestAnimationFrame(animate);\r\n        }\r\n\r\n        if (timeFraction === 1) {\r\n            animationEnd();\r\n        }\r\n    });\r\n}\r\n","import animate from '../../utilities/animate';\r\n\r\nconst screenWidthMax = 1440; // px\r\nconst animateScreenWidthMin = 767; // px\r\n\r\nexport default function mission() {\r\n\r\n    const observable = document.querySelector('.mission');\r\n\r\n    const options = {\r\n        // необходимая площадь пересечения container с viewport\r\n        threshold: .5\r\n    }\r\n\r\n    const observer = new IntersectionObserver((entries, observer) => {\r\n        entries.forEach(entry => {\r\n\r\n            if (entry.isIntersecting) {\r\n                startAnimation();\r\n                observer.unobserve(observable)\r\n            }\r\n        })\r\n    }, options)\r\n\r\n    observer.observe(observable)\r\n}\r\n\r\nfunction startAnimation() {\r\n    if (!canAnimate()) {\r\n        return;\r\n    }\r\n\r\n    const iphone = document.querySelector('.mission-iphone');\r\n    const card = document.querySelector('.mission-card');\r\n\r\n    const renderIphone = getIphoneRenderer(iphone);\r\n    const renderCard = getCardRenderer(card);\r\n\r\n    animate({\r\n        duration: 1500,\r\n        timing: function (timeFraction) {\r\n            return timeFraction;\r\n        },\r\n        draw: (progress) => {\r\n            renderIphone(progress);\r\n            renderCard(progress);\r\n        },\r\n        animationEnd: () => {\r\n            onIphoneAnimationEnd(iphone);\r\n            onCardAnimationEnd(card);\r\n        }\r\n    });\r\n}\r\n\r\nfunction onIphoneAnimationEnd(iphone) {\r\n    iphone.classList.add('mission-iphone--animated');\r\n    iphone.style.transform = '';\r\n}\r\n\r\nfunction onCardAnimationEnd(card) {\r\n    card.classList.add('mission-card--animated');\r\n    card.style.transform = '';\r\n    card.style.opacity = '';\r\n}\r\n\r\nfunction getCardRenderer(card) {\r\n    const cardTranslateXResult = Math.min(_100vw(), screenWidthMax) / 2;\r\n\r\n    return (progress) => {\r\n        const translateX = cardTranslateXResult * progress;\r\n        card.style.transform = `translateX(${translateX}px)`;\r\n        card.style.opacity = 1 - progress;\r\n    }\r\n}\r\n\r\nfunction getIphoneRenderer(iphone) {\r\n\r\n    const iphoneRotate = 90;\r\n    const iphoneTranslateXResult = Math.min(_100vw(), screenWidthMax) / 2;\r\n    const iphoneScaleResult = 0.75;\r\n\r\n    return (progress) => {\r\n\r\n        const rotate = iphoneRotate * (1 - progress);\r\n        const scale = 1 - (1 - iphoneScaleResult) * progress;\r\n        const translateXBeforeScale = -(1 - scale) / 2 * 100; // = left: 0\r\n        const translateXAfterScale = iphoneTranslateXResult * progress;\r\n\r\n        iphone.style.transform =\r\n            `translate(${translateXBeforeScale}%, ${0}%)\r\n            scale(${scale}, ${scale})\r\n            rotate(${rotate}deg)\r\n            translateX(${translateXAfterScale}px)`;\r\n\r\n        // finish state :\r\n        // translate(-12.5%, 0) scale(0.75, 0.75) rotate(0) translateX(calc(min(100vw, screenWidthMax) / 2));\r\n    }\r\n}\r\n\r\nfunction canAnimate() {\r\n    return _100vw() >= animateScreenWidthMin;\r\n}\r\n\r\nfunction _100vw() {\r\n    return Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\r\n}\r\n\r\nfunction _100vh() {\r\n    return Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\r\n}\r\n\r\n// позиция относительно левого верхнего угла страницы\r\nfunction offsetFromPage(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    const scrollLeft = window.scrollX || document.documentElement.scrollLeft;\r\n    const scrollTop = window.scrollY || document.documentElement.scrollTop;\r\n\r\n    return {\r\n        top: rect.top + scrollTop,\r\n        left: rect.left + scrollLeft\r\n    }\r\n}\r\n","import animate from '../../utilities/animate';\r\n\r\nexport default function cookiePopup() {\r\n\r\n    const popup = document.querySelector('.popup');\r\n    const btnOk = document.querySelector('.popup__close');\r\n\r\n    btnOk.addEventListener('click', handlerCloseClick)\r\n\r\n    showPopup();\r\n\r\n    function handlerCloseClick(e) {\r\n        hidePopup();\r\n    }\r\n\r\n    function showPopup() {\r\n        animate({\r\n            duration: 500,\r\n            timing: function (timeFraction) {\r\n                return timeFraction;\r\n            },\r\n            draw: (progress) => {\r\n                let y = 100 * (1 - progress);\r\n                popup.style.transform = `translateY(${y}%)`;\r\n            },\r\n            animationEnd: () => {\r\n            }\r\n        });\r\n    }\r\n\r\n    function hidePopup() {\r\n        animate({\r\n            duration: 400,\r\n            timing: function (timeFraction) {\r\n                return timeFraction;\r\n            },\r\n            draw: (progress) => {\r\n                let y = 100 * progress;\r\n                popup.style.transform = `translateY(${y}%)`;\r\n            },\r\n            animationEnd: () => {\r\n                popup.style.display = 'none';\r\n            }\r\n        });\r\n    }\r\n}\r\n","// import './styles/app.scss';\r\n\r\nimport getInTouch from './components/get-in-touch/get-in-touch';\r\nimport mission from './components/mission/mission';\r\nimport cookiePopup from './components/cookie-popup/cookie-popup';\r\n\r\nwindow.onload = () => {\r\n    mission();\r\n    getInTouch();\r\n    cookiePopup();\r\n}\r\n"],"names":["$985f3597ded1d4fd$var$onSubmit","event","preventDefault","document","querySelectorAll","forEach","input","required","$3020aa7b20ee6688$export$2e2bcd8739ae039","timing","draw","duration","animationEnd","start","performance","now","requestAnimationFrame","time","timeFraction","progress","$6f566e47b95dcec6$export$2e2bcd8739ae039","observable","querySelector","IntersectionObserver","entries","observer","entry","isIntersecting","$6f566e47b95dcec6$var$_100vw","iphone","card","renderIphone","iphoneRotate","iphoneTranslateXResult","Math","min","iphoneScaleResult","rotate","scale","translateXBeforeScale","translateXAfterScale","style","transform","$6f566e47b95dcec6$var$getIphoneRenderer","renderCard","cardTranslateXResult","translateX","opacity","$6f566e47b95dcec6$var$getCardRenderer","classList","add","$6f566e47b95dcec6$var$onIphoneAnimationEnd","$6f566e47b95dcec6$var$onCardAnimationEnd","$6f566e47b95dcec6$var$startAnimation","unobserve","threshold","observe","max","documentElement","clientWidth","window","innerWidth","$7b65108c47ab8f28$export$2e2bcd8739ae039","popup","addEventListener","e","y","display","onload"],"version":3,"file":"index.9c132b52.js.map"}